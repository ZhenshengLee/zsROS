# zs: revized for p3at based on p3at-sh-lms1xx.p file by adept mobile robots co. ltd.
# Customized for p3at
max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot
obstacle_range: 2.5 # 5.0
raytrace_range: 3.0 # 6.0

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)

# the radius of the robot in meters, this parameter should only be set for circular robots, all others should use the "footprint" parameters 
# robot_radius: 0.35 # zs : 0.5000 + ptu

# zs: footprint is added
footprint: [ [0.254, -0.230], [-0.254, -0.230], [-0.254, 0.230], [0.254, 0.230] ]

# inflation_radius: 0.50  # max. distance from an obstacle at which costs are incurred for planning paths.
# zs: Needs to be refined
# cost_scaling_factor: 5  # exponential rate at which the obstacle cost drops off (default: 10)

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan (kinect)

map_type: costmap
transform_tolerance: 5 # seconds


origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: True

#plugins:
#       - {name: obstacle_layer_laser, type: "costmap_2d::VoxelLayer"}
#       - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
#
#obstacle_layer_laser:
#  observation_sources: sim_lms2xx_1_pointcloud sonar
#  sim_lms2xx_1_pointcloud: {sensor_frame: laser_frame, data_type: PointCloud, topic: /RosAria/sim_lms2xx_1_pointcloud, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 3}
#  sonar: {sensor_frame: sonar_frame, data_type: PointCloud, topic: /RosAria/sonar, marking: true, clearing: true}
##       observation_sources: kinect_laser kinect_laser_low kinect_laser_long
##       kinect_laser: {sensor_frame: camera_link, data_type: LaserScan, topic: camera/scan_depth, marking: true, clearing: true, obstacle_range: 9.0, raytrace_range: 9.5, inf_is_valid: false}
##       kinect_laser_low: {sensor_frame: camera_link, data_type: LaserScan, topic: camera/scan_depth_low, marking: true, clearing: true, obstacle_range: 9.0, raytrace_range: 9.5, inf_is_valid: false}
##       kinect_laser_long: {sensor_frame: camera_link, data_type: LaserScan, topic: camera/scan_depth_long, marking: true, clearing: true, obstacle_range: 9.0, raytrace_range: 9.5, inf_is_valid: false}
##       kinect: {sensor_frame: camera_link, data_type: PointCloud2, topic: camera/depth/points, marking: true, clearing: true, inf_is_valid: true}
#
#
##     obstacle_layer_laser:
##       observation_sources: sick_lms1xx
##       sick_lms1xx: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true, obstacle_range: 10.0, raytrace_range: 12.0, inf_is_valid: true}
#
#inflation_layer:
#  inflation_radius: 0.3

## zs: following is transfered to the .yaml file for local costmap setting
## zs: add sonar
#observation_sources: sim_lms2xx_1_pointcloud sonar
##observation_sources: scan
#
## scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.35}
## Our lasers (Xtion and fake) either needs to publish a height, or set min_obstacle_height to 0.0:
## http://wiki.ros.org/navigation/Troubleshooting#Missing_Obstacles_in_Costmap2D
## Note taht the max_obstacle_height is very important too!
#sim_lms2xx_1_pointcloud: {sensor_frame: laser_frame, data_type: LaserScan, topic: sim_lms2xx_1_pointcloud, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 3}
## zs: add sonar, param not clear yet
#sonar: {sensor_frame: sonar_frame, data_type: PointCloud, topic: sonar, marking: true, clearing: true}
## Can we just set up two of these here?
##bump: {data_type: PointCloud2, topic: mobile_base/sensors/bumper_pointcloud, marking: true, clearing: false, min_obstacle_height: 0.0, max_obstacle_height: 0.15}
