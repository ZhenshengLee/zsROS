#! /usr/bin/env python
# Create a cfg file for getting control parameters for dmoc optimal controller

PACKAGE = 'cyton_actin_ros_driver'

from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

control_enum = gen.enum([ gen.const("JoyStick"        , int_t , 0 , "Joystick control")                       ,
                          gen.const("EndEffector"     , int_t , 1 , "GUI based ee pose control")              ,
                          gen.const("JointControl"    , int_t , 2 , "GUI based joint control")                ,
                          gen.const("ExternalControl" , int_t , 3 , "Topic based ee pose + gripper control")  ,
                          gen.const("MarkerControl" , int_t , 4 , "Marker based ee pose + gripper control")] ,
                          "An enum to modify control mode")

#       Name           , Type     , Reconfiguration level , Description                                        , Default , Min , Max
gen.add("control_mode" , int_t    , 2                     , "Choose between joystick posn/joint control modes" , 0       , 0   , 4   , edit_method=control_enum	)
gen.add("home"         , bool_t   , 2                     , "Set to Home"                                      , False)
gen.add("fold_config"  , bool_t   , 2                     , "Set to 90 degree config for grasping"             , False)
gen.add("x_d"          , double_t , 0                     , "desired end effector x position"                  , 0       , -1  , 1	)
gen.add("y_d"          , double_t , 0                     , "desired end effector y position"                  , 0       , -1  , 1	)
gen.add("z_d"          , double_t , 0                     , "desired end effector z position"                  , 0       , -1  , 1	)
gen.add("roll_d"       , double_t , 0                     , "roll of end effector"                             , 0       , -3.14  , 3.14	)
gen.add("pitch_d"      , double_t , 0                     , "pitch of end effector"                            , 0       , -3.14  , 3.14	)
gen.add("yaw_d"        , double_t , 0                     , "yaw of end effector"                              , 0       , -3.14  , 3.14	)
gen.add("J1"           , double_t , 0                     , "shoulder_yaw_joint"                               , 0       , -1.57  , 1.57	)
gen.add("J2"           , double_t , 0                     , "shoulder_pitch_joint"                             , 0       , -1.57  , 1.57	)
gen.add("J3"           , double_t , 0                     , "shoulder_roll_joint"                              , 0       , -1.57  , 1.57	)
gen.add("J4"           , double_t , 0                     , "elbow_pitch_joint"                                , 0       , -1.57  , 1.57	)
gen.add("J5"           , double_t , 0                     , "elbow_yaw_joint"                                  , 0       , -1.57  , 1.57	)
gen.add("J6"           , double_t , 0                     , "wrist_pitch_joint"                                , 0       , -1.57  , 1.57	)
gen.add("J7"           , double_t , 0                     , "wrist_roll_joint"                                 , 0       , -1.57  , 1.57	)
gen.add("J8"           , double_t , 4                     , "gripper_joint"                                    , 0       , -1.57  , 1.57	)


exit(gen.generate(PACKAGE , "Config" , "CytonInterface"))




