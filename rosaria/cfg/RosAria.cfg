#!/usr/bin/env python
PACKAGE = "rosaria"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("trans_accel", double_t, 0, "Translational acceleration (m/s^2)")
gen.add("trans_decel", double_t, 0, "Translational deceleration (m/s^2)" )
gen.add("lat_accel"  , double_t, 0, "Lateral acceleration (m/s^2)"      )
gen.add("lat_decel"  , double_t, 0, "Lateral deceleration (m/s^2)"      )
gen.add("rot_accel"  , double_t, 0, "Rotational acceleration (rad/s^2)" )
gen.add("rot_decel"  , double_t, 0, "Rotational deceleration (rad/s^2)" )
# zs: add variables, and DO NOT USE CHINESE HANZI
gen.add("zsstart_pose_x", double_t, 0.0, "robot pose.x in global framework(m)")
gen.add("zsstart_pose_y", double_t, 0.0, "robot pose.y in global framework(m)")
gen.add("zsstart_pose_th", double_t, 0.0, "robot pose in global framework(degree)")


# Default values are from the Pioneer Manual p.53

gen.add("TicksMM"    , int_t, 0, "Encoder ticks/mm"                            )
gen.add("DriftFactor", int_t, 0, "Value in 1/8192 increments to be added or " + 
                                 "subtracted from the left encoder ticks in " +
                                 "order to compensate for tire differences."   )
gen.add("RevCount"   , int_t, 0, "The number of differential encoder ticks " + 
                                 "for a 180-degree revolution of the robot."   )

exit(gen.generate(PACKAGE, "RosAria", "RosAria"))
